apiVersion: v1
kind: ConfigMap
metadata:
  name: inferno
  namespace: {{ .Values.namespace }}
data:
  FHIR_RESOURCE_VALIDATOR_URL: {{ default "http://validator-api:3500" .Values.inferno.externalValidatorUrl | quote }}
  REDIS_URL: {{ default "redis://inferno-redis:6379" .Values.inferno.redisUrl | quote }}
  RAILS_ENV: {{ default "production" .Values.inferno.railsEnv | quote }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: inferno-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/allow-snippet-annotations: "true"
spec:
  ingressClassName: {{ .Values.controller.ingressClass }}
  tls:
    - hosts:
        -  {{ .Values.externalDomain }}
      secretName: inferno-tls
  rules:
    - host: {{ .Values.externalDomain }}
      http:
        paths:
          - path: /hl7validatorapi
            pathType: Prefix
            backend:
              service:
                name: validator-api
                port:
                  number: 3500
          - path: /
            pathType: Prefix
            backend:
              service:
                name: inferno
                port:
                  number: 4567
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-configmap
  namespace: {{ .Values.namespace }}
data:
  POSTGRES_HOST: {{ default (printf "%s-postgresql" .Release.Name | quote) (index .Values.postgresql "externaldbhost") | quote }} # Use the release name as the default host if no external db override is given
  POSTGRES_USER: {{ .Values.postgresql.global.postgresql.auth.username | quote }}
  POSTGRES_PORT: {{ .Values.postgresql.containerPorts.postgresql | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
stringData:
  POSTGRES_DB: {{ .Values.postgresql.global.postgresql.auth.database | quote }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.global.postgresql.auth.password | quote }}
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
